Changelog:
  Jan 9, 2018:
    1. add validation checks of datanodes when adding tables from config file

  Jan 8, 2018:
    1. add bind address/listen port configured options

  Jan 5, 2018:
    1. add vertical sharding support

    2. update to v0.01.14

  Dec 1, 2017:
    1. using move instead of copying sql parsing results(tSqlParseItem)

  Nov 28, 2017:
    1. add 'create table' & 'drop table' usage support

    2. make 'myproxy' an open source project on github

    3. update to v0.01.13

  Nov 15, 2017:
    1. add an INITIAL version of 'aggregation processing' module named 'agg_hook'
        that do agregations on result sets

    2. update to v0.01.12 

  Nov 9, 2017:
    1. fix bug that a transaction (for example, doing a query) without valid
        cache  will be abandoned, it is now saved until the cache is available

    2. the 'rx()' method on datanode fds is now moved into module 'myproxy_backend'

    3. fix a memory leak problem of releasing column group buffers in a 
        'to-be-deleted' xa

    4. fix 'thread-unsafe' problem when returning back the cache

    5. the cache is forced to be removed when an 'incorrect' fd is closed


  Nov 7, 2017:
    1. make 'cache pool size', 'datanode group size', 'thread pool size'
        to be configuable 

    2. add support for '__comment' keyword of json files

  Nov 3, 2017:
    1. add a new module named 'dnmgr' to manage usages of datanode and
        datanode groups

    2. add the signal way to reload config from fs by sending signal 'SIGUSR2'

  Oct 30, 2017:
    1. add a new hook module named 'static_parse' which handles most sql
        adaption jobs from ZAS except placeholder adaption

    2. fixed a bug that the return_cache() call within deal_query_res() 
        will crash when error occors from datanodes

    3. updated to v0.01.11 alpha

  Oct 25, 2017:
    1. changed inheritance of class hook_object and hook_framework which 
        will no longer derive from sql_tree that improves performance of 
        the sql parsing process

  Oct 24, 2017:
    1. all request/sql interceptions are now be processed in 'hook' modules

    2. added multi-threading support in deal_stmt_prepare_res() logic

    3. fixed the 'duplicated-packet receiving' bug in xa_item::rx() logic
  
    4. the transaction terminating command 'commit/rollback' is now implemented
        in the myproxy_backend module

    5. fixed the sql-tree generating bug of 'insert' statements in ZAS module

    6. added support for the g++-7.x compiler

    7. updated to v0.01.10 alpha


  Oct 13, 2017:
    1. add a namespace to hold configs, table list, login sessions, and etc

    2. the 'interceptor' module is renamed to 'hook'


  Sep 30, 2017:
    1. using new machanism of Data-Receiving-Thread management, now 
        every result set streams from datanodes are processed by multi threads.

    2. updated to v0.01.09 alpah

  Sep 27, 2017:
    1. using new data receiving logic which read data block by block 
        during fetching data from physical datanodes.

  Sep 21, 2017:
    1. added ordering to the multimap db

  Sep 20, 2017:
    1. the interceptor module list is now automatically generated by module_gen.py

    2. the cache is replaced by std::multimap

    3. updated to v0.01.08 alpha


  Aug 17, 2017:
    1. added a initial implementation of 'global id' schema, supports
        global id attaching with 'insert <format> <values>' statements

    2. updated to v0.01.07 alpha


  Jul 19, 2017:
    1. using the boost::shared_ptr to replace all new/delete usages, 
    
         updated to v0.01.06 alpha

  Jul 17, 2017:
    1. using new version of netsvr, updated to v0.01.05 alpha

  Jul 16, 2017:
    1. the query mode is completed, update to v0.01.04 alpha

  Jul 5, 2017:
    1. implemented myproxy under new netsvr version at v1.02.x, the query 

        mode is almost completed

    2. updated version to v0.01.03 alpha

  May 27, 2017:
    1. the basic statements 'select/insert/delete/update' are supported by

        the proxy

    2. updated version to v0.00.14 beta

  May 18, 2017:
    1. the main functions of 'sql-parser' module are completed, but needed 
    
        to test with the 'sql-router' module which is not yet developed

    2. update the source to v.0.00.13 beta, the 'sql-router' are to be

        developed in the next reversion


  May 4, 2017:
    1. the 2 sql modes 'sql-query' and 'statement-exec' are completed

    2. remove 'mysqlc' and 'toolkits' modules, use those in 'myitf' instead

    3. updated version to v0.00.13 alpha, the 'sql-parser' module will

        be developed at this reversion


  Apr 25, 2017:
    1. add 'stmt_send_long_data' request support to prepare mode

    2. updated version to v0.00.12 alpha

  Apr 21, 2017:
    1. added support for prepare mode of mysql protocol

    2. updated version to v0.00.11 alpha

  Apr 12, 2017:

    1. added back-end error message feedback to client, but needs more tests

    2. added duplicated prepared statements detection, needs more tests too

  Apr 11, 2017:
    1. added support for statement prepare command, but needed more tests

    2. updated version to v0.00.10 alpha

  Apr 5, 2017:
    1. encapsulates all proxy layer protocols by files in proto/ directory

    2. updated version to v0.00.09 beta

  Mar 16, 2017:
    1. use C version of the following modules instead of C++ versions:

        resizable container, dispatch protocol

    2. updated version to v0.00.08 alpha

  Feb 23, 2017:
    1. modified the way that processor sending packets to dispatcher

    2. updated version to v0.00.07 alpha

  Feb 4, 2017:
    1. updated mysqlc source to v1.00.11 beta

    2. updated version to v0.00.06 alpha

  Jan 25, 2017:
    1. completed coding the tx-part of 'sql-spliting',
        need to complete the following:

        . sub-sql executing part at processor and also 
           the result set responses

        . the 'deep-parse' in sql_parser

        . the 'sql-routing' in dispatcher

  Jan 22, 2017:
    1. support 'desc table' command, will add the sql-split 
        machanism later

    2. updated version to v0.0.05 beta

  Jan 18, 2017:
    1. add table structure and table extra informations in sync_priv
        response

  Oct 20, 2016:
    1. merged mysqlc library into main source tree, updated 
        version to v0.0.04

  Oct 13, 2016:
    1. updated the json_parser source, update version to v0.0.03

  Oct 11, 2016:
    1. libraries 'toolkits', 'mysqls' are merged into main source
        tree, so updated version to v0.0.02

  Oct 9, 2016:
    1. initial version, implemented a framework to handle
        mysql commands, also implemented dummy handlers for
        a few commands

    2. version at v0.0.01 

